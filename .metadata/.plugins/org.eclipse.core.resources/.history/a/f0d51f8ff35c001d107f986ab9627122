/*
 * button.c
 *
 *  Created on: Nov 5, 2022
 *      Author: nguye
 */
#include "button.h"
#include "main.h"

int keyEvent0_normal = NORMAL_STATE;
int keyEvent1_normal = NORMAL_STATE;
int keyEvent2_normal = NORMAL_STATE;


int getINCInput_normal_press(int counter) {
	keyEvent0_normal = keyEvent1_normal;
	keyEvent1_normal = keyEvent2_normal;
	keyEvent2_normal = HAL_GPIO_ReadPin(INC_BUTTON_GPIO_Port, INC_BUTTON_Pin);
	if(keyEvent0_normal == keyEvent1_normal && keyEvent1_normal == keyEvent2_normal) {
		if(keyEvent2_normal == PRESSED_STATE) {
			counter += 1;
			if(counter > 9) counter = 0;
			display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
		}
	}
	return counter;
}

int keyEventDC0_normal = NORMAL_STATE;
int keyEventDC1_normal = NORMAL_STATE;
int keyEventDC2_normal = NORMAL_STATE;

int keyEventDC3_normal = NORMAL_STATE;

int getDCInput_normal_press(int counter) {
	keyEventDC0_normal = keyEventDC1_normal;
	keyEventDC1_normal = keyEventDC2_normal;
	keyEventDC2_normal = HAL_GPIO_ReadPin(DC_BUTTON_GPIO_Port, DC_BUTTON_Pin);
	if(keyEventDC0_normal == keyEventDC1_normal && keyEventDC1_normal == keyEventDC2_normal) {
		if(keyEventDC2_normal == PRESSED_STATE) {
			counter -= 1;
			if(counter < 0) counter = 9;
			display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
		}
	}
	return counter;
}

int keyEventReset0_normal = NORMAL_STATE;
int keyEventReset1_normal = NORMAL_STATE;
int keyEventReset2_normal = NORMAL_STATE;

int getResetInput(int counter) {
	keyEventReset0_normal = keyEventReset1_normal;
	keyEventReset1_normal = keyEventReset2_normal;
	keyEventReset2_normal = HAL_GPIO_ReadPin(RESET_BUTTON_GPIO_Port, RESET_BUTTON_Pin);
	if(keyEventReset0_normal == keyEventReset1_normal && keyEventReset1_normal == keyEventReset2_normal) {
		if(keyEventReset2_normal == PRESSED_STATE) {
			counter = 0;
			display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
		}
	}
	return counter;
}

int keyEvent0 = NORMAL_STATE;
int keyEvent1 = NORMAL_STATE;
int keyEvent2 = NORMAL_STATE;

int keyEvent3 = NORMAL_STATE;

int timerCount = 300;
int getINCInput(int counter) {
	keyEvent0 = keyEvent1;
	keyEvent1 = keyEvent2;
	keyEvent2 = HAL_GPIO_ReadPin(INC_BUTTON_GPIO_Port, INC_BUTTON_Pin);
	if(keyEvent0 == keyEvent1 && keyEvent1 == keyEvent2) {
		if(keyEvent3 != keyEvent2) {
			keyEvent3 = keyEvent2;
			if(keyEvent2 == PRESSED_STATE) {
				setTimer3(1000);
				counter += 1;
				timerCount = 300;
				if(counter > 9) counter = 0;
				display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
			}
		}
		else {
			timerCount--;
			if(timerCount <= 0) {
				timerCount = 100;

				//Implement here
				if(keyEvent2 == PRESSED_STATE) {
					setTimer3(1000);
					counter += 1;
					if(counter > 9) counter = 0;
					display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
				}
			}
		}
	}
	return counter;
}

int keyEventDC0 = NORMAL_STATE;
int keyEventDC1 = NORMAL_STATE;
int keyEventDC2 = NORMAL_STATE;

int keyEventDC3 = NORMAL_STATE;
int timerCountDC = 300;

int getDCInput(int counter) {
	keyEventDC0 = keyEventDC1;
	keyEventDC1 = keyEventDC2;
	keyEventDC2 = HAL_GPIO_ReadPin(DC_BUTTON_GPIO_Port, DC_BUTTON_Pin);
	if(keyEventDC0 == keyEventDC1 && keyEventDC1 == keyEventDC2) {
		if(keyEventDC3 != keyEventDC2) {
			keyEventDC3 = keyEventDC2;
			if(keyEventDC2 == PRESSED_STATE) {
				setTimer3(1000);
				counter -= 1;
				timerCountDC = 300;
				if(counter < 0) counter = 9;
				display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
			}
		}
		else {
			timerCountDC--;
			if(timerCountDC <= 0) {
				timerCountDC = 100;

				//Implement here
				if(keyEventDC2 == PRESSED_STATE) {
					setTimer3(1000);
					counter -= 1;
					if(counter < 0) counter = 9;
					display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
				}
			}
		}
	}
	return counter;
}
int keyEventReset0 = NORMAL_STATE;
int keyEventReset1 = NORMAL_STATE;
int keyEventReset2 = NORMAL_STATE;

int getResetInput(int counter) {
	keyEventReset0 = keyEventReset1;
	keyEventReset1 = keyEventReset2;
	keyEventReset2 = HAL_GPIO_ReadPin(RESET_BUTTON_GPIO_Port, RESET_BUTTON_Pin);
	if(keyEventReset0 == keyEventReset1 && keyEventReset1 == keyEventReset2) {
		if(keyEventReset2 == PRESSED_STATE) {
			setTimer3(1000);
			counter = 0;
			display7SEG(counter, GPIOA, a_1_Pin, b_1_Pin, c_1_Pin, d_1_Pin, e_1_Pin, f_1_Pin, g_1_Pin);
		}
	}
	return counter;
}
